13.1 红黑树的性质
练习：
13.1-1：不会
13.1-2：不会
13.1-3：不会
13.1-4：不会
13.1-5：不会
13.1-6：不会
13.1-7：不会
13.2 旋转
左旋伪代码实现：
def LeftRotate(T,x):
    y = x.right
    x.right = y.left
    if y.left:
        y.left.p = x
    y.p = x.p
    if not x.p:
        T.root = y
    elif x == x.p.left:
        x.p.left = y
    else:
        x.p.right = y
    y.left = x
    x.p = y
练习：
13.2-1：
def RightRotate(T,x):
    y = x.left
    x.left = y.right
    if y.right:
        y.right.p = x
    y.p = x.p
    if not x.p:
        T.root = y
    elif x == x.p.left:
        x.p.left = y
    else:
        x.p.right = y
    y.right = x
    x.p = y
13.2-2：不会
13.2-3：不会
13.2-4：不会
13.2-5：不会
13.3 插入
红黑树插入伪代码实现：
def RBInsert(T,z):
    y = None
    x = T.root
    while x:
        y = x
        if z.key < x.key:
            x = x.left
        else:
            x = x.right
    z.p = y
    if not y:
        T.root = z
    elif z.key < y.key:
        y.left = z
    else:
        y.right = z
    z.left = None
    z.right = None
    z.color = "RED"
    RBInsertFixup(T,z)

def RBInsertFixup(T,z):
    while z.p.color == "RED":
        if z.p == z.p.p.left:
            y = z.p.p.right
            if y.color == "RED":
                z.p.color = "BLACK"
                y.color = "BLACK"
                z.p.p.color = "RED"
                z = z.p.p
            else:
                if z == z.p.right:
                    z = z.p
                    LeftRotate(T,z)
                z.p.color = "Black"
                z.p.p.color = "RED"
                RightRotate(T,z.p.p)
        else:
            y = z.p.p.left
            if y.color == "RED":
                z.p.color = "BLACK"
                y.color = "BLACK"
                z.p.p.color = "RED"
                z = z.p.p
            else:
                if z == z.p.left:
                    z = z.p
                    RightRotate(T,z)
                z.p.color = "Black"
                z.p.p.color = "RED"
                LeftRotate(T,z.p.p)
    T.root.color = "BLACK"
练习：
13.3-1：为了保持性质5，令红黑树的黑高不变。
13.3-2：不会
13.3-3：不会
13.3-4：不会
13.3-5：不会
13.3-6：不会
13.4 删除
def RB_Transplant(T,u,v):
    if u.p == None:
        T.root = v
    elif u == u.p.left:
        u.p.left = v
    else:
        u.p.right = v
    v.p = u.p
    
